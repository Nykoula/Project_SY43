<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="com.obiscr.chatgpt.settings.EasyCodeState">
    <option name="projectFiles" value="$PROJECT_DIR$/app/src/androidTest/java/com/example/project_sy43/ExampleInstrumentedTest.kt;C:/Users/fthun/AndroidStudioProjects/Project_SY43/app/src/main/java/com/example/project_sy43/model/Conversation.kt;C:/Users/fthun/AndroidStudioProjects/Project_SY43/app/src/main/java/com/example/project_sy43/model/Message.kt;C:/Users/fthun/AndroidStudioProjects/Project_SY43/app/src/main/java/com/example/project_sy43/model/Person.kt;C:/Users/fthun/AndroidStudioProjects/Project_SY43/app/src/main/java/com/example/project_sy43/model/Product.kt;C:/Users/fthun/AndroidStudioProjects/Project_SY43/app/src/main/java/com/example/project_sy43/navigation/VintedNavGraph.kt;C:/Users/fthun/AndroidStudioProjects/Project_SY43/app/src/main/java/com/example/project_sy43/navigation/VintedScreen.kt;C:/Users/fthun/AndroidStudioProjects/Project_SY43/app/src/main/java/com/example/project_sy43/repository/ProductRepository.kt;C:/Users/fthun/AndroidStudioProjects/Project_SY43/app/src/main/java/com/example/project_sy43/ui/theme/children_screen/Baby.kt;C:/Users/fthun/AndroidStudioProjects/Project_SY43/app/src/main/java/com/example/project_sy43/ui/theme/children_screen/BabyGirl.kt;C:/Users/fthun/AndroidStudioProjects/Project_SY43/app/src/main/java/com/example/project_sy43/ui/theme/children_screen/BabyShoes.kt;C:/Users/fthun/AndroidStudioProjects/Project_SY43/app/src/main/java/com/example/project_sy43/ui/theme/components/BottomBar.kt;C:/Users/fthun/AndroidStudioProjects/Project_SY43/app/src/main/java/com/example/project_sy43/ui/theme/components/ButtonBottomBar.kt;C:/Users/fthun/AndroidStudioProjects/Project_SY43/app/src/main/java/com/example/project_sy43/ui/theme/components/TopBar.kt;C:/Users/fthun/AndroidStudioProjects/Project_SY43/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/AccueilScreen.kt;C:/Users/fthun/AndroidStudioProjects/Project_SY43/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/ArticleDetail.kt;C:/Users/fthun/AndroidStudioProjects/Project_SY43/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/ConversationScreen.kt;C:/Users/fthun/AndroidStudioProjects/Project_SY43/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/Dressing.kt;C:/Users/fthun/AndroidStudioProjects/Project_SY43/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/HomeScreen.kt;C:/Users/fthun/AndroidStudioProjects/Project_SY43/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/Login.kt;C:/Users/fthun/AndroidStudioProjects/Project_SY43/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/MessagesScreen.kt;C:/Users/fthun/AndroidStudioProjects/Project_SY43/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/NotificationSetting.kt;C:/Users/fthun/AndroidStudioProjects/Project_SY43/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/ProfileScreen.kt;C:/Users/fthun/AndroidStudioProjects/Project_SY43/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/SearchScreen.kt;C:/Users/fthun/AndroidStudioProjects/Project_SY43/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/SecretFile.kt;C:/Users/fthun/AndroidStudioProjects/Project_SY43/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/SellScreen.kt;C:/Users/fthun/AndroidStudioProjects/Project_SY43/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/Setting.kt;C:/Users/fthun/AndroidStudioProjects/Project_SY43/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/SignUpScreen.kt;C:/Users/fthun/AndroidStudioProjects/Project_SY43/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/TypeClotheScreen.kt;C:/Users/fthun/AndroidStudioProjects/Project_SY43/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/UpdatePassword.kt;C:/Users/fthun/AndroidStudioProjects/Project_SY43/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/UpdateProfile.kt;C:/Users/fthun/AndroidStudioProjects/Project_SY43/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/AccessoireSportScreen.kt;C:/Users/fthun/AndroidStudioProjects/Project_SY43/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/BlazerScreen.kt;C:/Users/fthun/AndroidStudioProjects/Project_SY43/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/ColorScreen.kt;C:/Users/fthun/AndroidStudioProjects/Project_SY43/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/CombinaisonScreen.kt;C:/Users/fthun/AndroidStudioProjects/Project_SY43/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/Hauts.kt;C:/Users/fthun/AndroidStudioProjects/Project_SY43/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/Jupes.kt;C:/Users/fthun/AndroidStudioProjects/Project_SY43/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/LingerieMaternite.kt;C:/Users/fthun/AndroidStudioProjects/Project_SY43/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/LingeriePyjamasScreen.kt;C:/Users/fthun/AndroidStudioProjects/Project_SY43/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/MaillotDeBainScreen.kt;C:/Users/fthun/AndroidStudioProjects/Project_SY43/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/Manteaux.kt;C:/Users/fthun/AndroidStudioProjects/Project_SY43/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/ManteauxEtVestesScreen.kt;C:/Users/fthun/AndroidStudioProjects/Project_SY43/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/MaterniteScreen.kt;C:/Users/fthun/AndroidStudioProjects/Project_SY43/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/MatieresScreen.kt;C:/Users/fthun/AndroidStudioProjects/Project_SY43/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/Pantalons.kt;C:/Users/fthun/AndroidStudioProjects/Project_SY43/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/Robe.kt;C:/Users/fthun/AndroidStudioProjects/Project_SY43/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/RobeOccasion.kt;C:/Users/fthun/AndroidStudioProjects/Project_SY43/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/ShortScreen.kt;C:/Users/fthun/AndroidStudioProjects/Project_SY43/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/SizeScreen.kt;C:/Users/fthun/AndroidStudioProjects/Project_SY43/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/SportScreen.kt;C:/Users/fthun/AndroidStudioProjects/Project_SY43/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/SweatCapucheScreen.kt;C:/Users/fthun/AndroidStudioProjects/Project_SY43/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/SweatScreen.kt;C:/Users/fthun/AndroidStudioProjects/Project_SY43/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/VestesScreen.kt;C:/Users/fthun/AndroidStudioProjects/Project_SY43/app/src/main/java/com/example/project_sy43/ui/theme/theme/Color.kt;C:/Users/fthun/AndroidStudioProjects/Project_SY43/app/src/main/java/com/example/project_sy43/ui/theme/theme/Theme.kt;C:/Users/fthun/AndroidStudioProjects/Project_SY43/app/src/main/java/com/example/project_sy43/ui/theme/theme/Type.kt;C:/Users/fthun/AndroidStudioProjects/Project_SY43/app/src/main/java/com/example/project_sy43/viewmodel/MessagesViewModel.kt;C:/Users/fthun/AndroidStudioProjects/Project_SY43/app/src/main/java/com/example/project_sy43/viewmodel/PersonViewModel.kt;C:/Users/fthun/AndroidStudioProjects/Project_SY43/app/src/main/java/com/example/project_sy43/viewmodel/ProductViewModel.kt;C:/Users/fthun/AndroidStudioProjects/Project_SY43/app/src/main/java/com/example/project_sy43/viewmodel/SellViewModel.kt;C:/Users/fthun/AndroidStudioProjects/Project_SY43/app/src/main/java/com/example/project_sy43/MainActivity.kt;C:/Users/fthun/AndroidStudioProjects/Project_SY43/app/src/test/java/com/example/project_sy43/ExampleUnitTest.kt;C:/Users/fthun/AndroidStudioProjects/Project_SY43/app/build.gradle.kts;C:/Users/fthun/AndroidStudioProjects/Project_SY43/app/google-services.json;C:/Users/fthun/AndroidStudioProjects/Project_SY43/build.gradle.kts;C:/Users/fthun/AndroidStudioProjects/Project_SY43/settings.gradle.kts" />
    <option name="forceFullIndex" value="false" />
    <option name="fileSummaryMaps" value="{&quot;C:/Users/fthun/AndroidStudioProjects/Project_SY43&quot;:&quot;{\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/HomeScreen.kt\&quot;:\&quot;This file contains a Composable function `MonCompte` that displays a screen with a list of product posts fetched from Firestore. It also includes a `Post` data class to represent the post data.\\n\\n`Post`: A data class that represents a product post with properties such as title, size, price, photos, state, and id.\\n\\n`MonCompte`: A Composable function that displays a screen with a list of product posts fetched from Firestore. It includes a LazyColumn with a LazyRow for recommended posts and a list of other posts. The function also includes a \\\&quot;More\\\&quot; button to load additional posts.\&quot;,\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/Jupes.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`JupeScreen`: This function creates a screen that displays a list of different types of skirts, allowing the user to select one and navigate back to the previous screen.\\n\\nThe file also imports various Compose UI components and a `SellViewModel` class, which is likely used to manage the state of the selected skirt type.\&quot;,\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/BlazerScreen.kt\&quot;:\&quot;This file contains a single Composable function `BlazerScreen` that displays a list of blazer and suit types for different categories (Woman, Man, Children) in a Scaffold with a top bar. The selected type is stored in the `SellViewModel` and can be used to navigate to the next screen.\\n\\n`Blazer`: This object contains the lists of blazer and suit types for different categories.\\n\\n`BlazerScreen`: This Composable function displays a list of blazer and suit types in a Lazy Column, with a radio button to indicate the selected type. The selected type is updated in the `SellViewModel` and the user can navigate back to the previous screen.\&quot;,\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/TypeClotheScreen.kt\&quot;:\&quot;This file contains the following classes and functions:\\n\\n`TypeClothes`: This class defines the lists of clothing types for women, men, and children.\\n\\n`TypeClothesChoice`: This class defines the lists of clothing type choices for women, men, and children.\\n\\n`TypeClotheScreen`: This function is a Composable function that displays a screen for selecting the type of clothing to sell, based on the selected category (woman, man, or children).\\n\\nThis file is responsible for creating the UI for the \\\&quot;Type of Clothes\\\&quot; screen in the Vinted app, which allows the user to select the type of clothing they want to sell based on the selected category.\&quot;,\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/AccessoireSportScreen.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`AccessoireSportScreen`: This function creates a screen that displays a list of sports accessory types, allowing the user to select one and navigate back to the previous screen.\\n\\nThe file also imports various Compose UI components and a `SellViewModel` class, which is likely used to manage the state of the selected product type.\&quot;,\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/SweatScreen.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`SweatScreen`: This function creates a screen that displays a list of different types of sweats, allowing the user to select one and navigate back to the previous screen.\\n\\nThe file also imports various Compose UI components and a `SellViewModel` class, which is likely used to manage the state of the selected sweat type.\&quot;,\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/UpdatePassword.kt\&quot;:\&quot;This file contains a single Composable function `UpdatePassword` that provides a UI for updating the user\\u0027s password in a Firebase-based Android application.\\n\\n`UpdatePassword`: This function creates a Compose-based UI screen that allows the user to update their password by entering their current password, a new password, and confirming the new password. It handles the password update process, including re-authentication, updating the password in Firebase Authentication, and updating the password in Firestore.\\n\\nThe file also includes several helper functions and state variables to manage the password update process and display appropriate error messages.\&quot;,\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/SignUpScreen.kt\&quot;:\&quot;This file contains a Compose-based UI for a sign-up screen, with various input fields, date picker, and Firebase integration for user registration.\\n\\n`SignUpScreen`: A composable function that represents the sign-up screen, handling user input, form validation, and Firebase authentication and data storage.\\n\\n`CreateField`: A composable function that creates a custom text field with a label, placeholder, and leading icon.\\n\\n`convertMillisToDate`: A function that converts a millisecond timestamp to a date string in the format \\\&quot;dd/mm/yyyy\\\&quot;.\\n\\n`calculateAge`: A function that calculates the age based on a given birth date in milliseconds.\\n\\n`DatePickerModal`: A composable function that displays a date picker dialog with a custom locale (French) and handles the date selection.\&quot;,\&quot;/app/src/main/java/com/example/project_sy43/navigation/VintedNavGraph.kt\&quot;:\&quot;This file defines the navigation graph for the Vinted app, which includes various screens and their corresponding routes. Here\\u0027s a summary of the classes and functions in the file:\\n\\n`VintedNavGraph`: This function sets up the navigation graph for the Vinted app, defining the different screens and their routes.\\n\\n`Accueil`: This screen displays the main home page of the Vinted app.\\n\\n`LoginScreen`: This screen allows users to log in to the Vinted app.\\n\\n`SignUpScreen`: This screen allows users to sign up for the Vinted app.\\n\\n`MonCompte`: This screen displays the user\\u0027s account information.\\n\\n`ColorScreen`: This screen allows users to select a color for their clothing item.\\n\\n`MatieresScreen`: This screen allows users to select the material for their clothing item.\\n\\n`TypeClotheScreen`: This screen allows users to select the type of clothing item they want to sell.\\n\\n`ManteauxEtVestesScreen`: This screen displays a list of coats and jackets that users can sell.\\n\\n`VestesScreen`: This screen displays a list of jackets that users can sell.\\n\\n`SweatCapucheScreen`: This screen displays a list of hoodies that users can sell.\\n\\n`ManteauxScreen`: This screen displays a list of coats that users can sell.\\n\\n`SweatScreen`: This screen displays a list of sweaters that users can sell.\\n\\n`BlazerScreen`: This screen displays a list of blazers that users can sell.\\n\\n`RobeScreen`: This screen displays a list of dresses that users can sell.\\n\\n`RobeOccasionScreen`: This screen displays a list of occasion dresses that users can sell.\\n\\n`JupeScreen`: This screen displays a list of skirts that users can sell.\\n\\n`HautScreen`: This screen displays a list of tops that users can sell.\\n\\n`PantalonScreen`: This screen displays a list of pants that users can sell.\\n\\n`ShortScreen`: This screen displays a list of shorts that users can sell.\\n\\n`CombinaisonScreen`: This screen displays a list of jumpsuits that users can sell.\\n\\n`MaillotDeBainScreen`: This screen displays a list of swimwear that users can sell.\\n\\n`LingeriePyjamaScreen`: This screen displays a list of lingerie and pajamas that users can sell.\\n\\n`MaterniteScreen`: This screen displays a list of maternity wear that users can sell.\\n\\n`LingerieMaterniteScreen`: This screen displays a list of maternity lingerie that users can sell.\\n\\n`SportScreen`: This screen displays a list of sportswear that users can sell.\\n\\n`AccessoireSportScreen`: This screen displays a list of sports accessories that users can sell.\\n\\n`BabyGirlScreen`: This screen displays a list of baby girl clothing that users can sell.\\n\\n`BabyScreen`: This screen displays a list of baby clothing that users can sell.\\n\\n`BabyShoesScreen`: This screen displays a list of baby shoes that users can sell.\\n\\n`SizeScreen`: This screen allows users to select the size of their clothing item.\\n\\n`Search`: This screen allows users to search for items on the Vinted app.\\n\\n`Messages`: This screen displays the user\\u0027s messages.\\n\\n`ConversationScreen`: This screen displays a conversation between the user and another user.\\n\\n`Profile`: This screen displays the user\\u0027s profile information.\\n\\n`Setting`: This screen allows the user to access the app\\u0027s settings.\\n\\n`Dressing`: This screen displays the user\\u0027s wardrobe.\\n\\n`ClothingDetailView`: This screen displays the details of a specific clothing item.\\n\\n`FlappyBirdGame`: This screen displays a Flappy Bird game.\\n\\n`UpdateProfile`: This screen allows the user to update their profile information.\\n\\n`NotificationSetting`: This screen allows the user to manage their notification settings.\\n\\n`SellScreen`: This screen allows the user to sell a clothing item.\&quot;,\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/ManteauxEtVestesScreen.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`ManteauxEtVestesScreen`: This function creates a screen that displays a list of clothing types (Manteaux, Vestes, Capes et ponchos, Vestes sans manches) and allows the user to navigate to the corresponding screen or select a product type.\\n\\nThe file also imports various Compose components and classes from the Android Jetpack Compose library, as well as a `VintedTopBar` component and a `SellViewModel` class from the project\\u0027s own codebase.\&quot;,\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/theme/Theme.kt\&quot;:\&quot;This file defines a Compose-based theme for the \\\&quot;Project_SY43\\\&quot; Android application.\\n\\n`LightColorScheme`: Defines the light color scheme for the application.\\n\\n`Project_SY43Theme`: A composable function that sets up the application\\u0027s theme, always using the light color scheme and disabling dynamic colors.\\n\\nThis file is responsible for configuring the visual appearance of the \\\&quot;Project_SY43\\\&quot; Android application, ensuring a consistent light theme across the app.\&quot;,\&quot;/app/src/main/java/com/example/project_sy43/model/Conversation.kt\&quot;:\&quot;This file contains a single data class:\\n\\n`Conversation`: A data class that represents a conversation between a buyer and a seller, including information about the product, the negotiated price, the participants, the last message, and the most recent message ID. It also includes some additional fields for UI purposes, such as the conversation ID, the other user\\u0027s name, and the product image URL.\\n\\nThis file does not contain any functions. It is a data class that is likely used to store and manage conversation data in a Firebase Firestore database.\&quot;,\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/ShortScreen.kt\&quot;:\&quot;This file contains a Composable function `ShortScreen` that displays a list of short types based on the selected category (Woman, Man, or Children) and allows the user to select a type. The file also defines three objects: `Short`, `womanType`, `manType`, and `childrenType`, which contain lists of short types for each category.\\n\\n`Short`: Defines the lists of short types for different categories.\\n\\n`ShortScreen`: Displays a list of short types based on the selected category and allows the user to select a type.\&quot;,\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/AccueilScreen.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`Accueil`: This function creates a screen that displays a \\\&quot;Connexion/Login\\\&quot; button, which navigates to the Login screen when clicked. The function takes a `ProductViewModel` and a `NavController` as parameters.\\n\\nThe file appears to be part of the UI layer of a larger Android application built using Jetpack Compose. It defines the layout and behavior of the \\\&quot;Accueil\\\&quot; (Home) screen, which is likely the main entry point for the application.\&quot;,\&quot;/settings.gradle.kts\&quot;:\&quot;This file is a Gradle configuration file for an Android project. It does not contain any classes or functions, but rather defines the project\\u0027s build settings and dependencies.\\n\\n`pluginManagement`: Configures the plugin repositories to be used for the project, including Google, Maven Central, and the Gradle Plugin Portal.\\n\\n`dependencyResolutionManagement`: Configures the repositories to be used for resolving dependencies, including Google and Maven Central.\\n\\n`rootProject.name`: Sets the name of the root project to \\\&quot;Project_SY43\\\&quot;.\\n\\n`include(\\\&quot;:app\\\&quot;)`: Includes the \\\&quot;:app\\\&quot; module in the project.\\n\\nOverall, this file sets up the build environment for an Android project, specifying the repositories to be used for plugins and dependencies, and defining the project structure.\&quot;,\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/components/TopBar.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`VintedTopBar`: A composable function that creates a top app bar with a title, optional navigation icon, and optional dropdown menu with edit and delete options.\\n\\nThe file also imports various classes and functions from the Compose Material 3 library to create the top app bar and its components.\&quot;,\&quot;/app/src/main/java/com/example/project_sy43/model/Message.kt\&quot;:\&quot;This file defines a data class `Message` that represents a message in a chat application. The class has the following properties:\\n\\n`Message`: A data class that represents a message in a chat application, including the sender ID, message text, timestamp, message type (either \\\&quot;text\\\&quot; or \\\&quot;proposition\\\&quot;), and an optional proposed price.\\n\\nThe file does not contain any functions, but rather defines the structure of the `Message` data class, which can be used to store and retrieve message data in a Firebase Firestore database.\&quot;,\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/Dressing.kt\&quot;:\&quot;This file contains the implementation of the \\\&quot;Dressing\\\&quot; screen in a Vinted-like application built using Jetpack Compose. It displays a list of clothing items that the user has sold, along with details and actions for each item.\\n\\n`SoldClothingItem`: A data class representing a clothing item that has been sold.\\n\\n`Dressing`: A composable function that renders the main \\\&quot;Dressing\\\&quot; screen, including the list of sold clothing items and a top and bottom bar.\\n\\n`SoldClothingList`: A composable function that renders the list of sold clothing items, with a placeholder if the list is empty.\\n\\n`SoldClothingListItem`: A composable function that renders a single item in the list of sold clothing items.\\n\\n`DetailRow`: A composable function that renders a row with a label and a value, used to display details of a clothing item.\&quot;,\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/MaillotDeBainScreen.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`MaillotDeBainScreen`: This function creates a screen that displays a list of different types of swimwear, allowing the user to select one and navigate back to the previous screen.\\n\\nThe file also imports various Compose UI components and a `SellViewModel` class, which is likely used to manage the state of the selected swimwear type.\&quot;,\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/ColorScreen.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`ColorScreen`: This function creates a screen that displays a list of colors, allowing the user to select up to two colors. The selected colors are stored in the `SellViewModel` and can be saved using the bottom bar.\\n\\nThe file also imports various Compose UI components and classes from the Android Jetpack Compose library to create the layout and functionality of the `ColorScreen`.\&quot;,\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/MessagesScreen.kt\&quot;:\&quot;This file contains the implementation of the `Messages` screen in a Compose-based Android application. It displays a list of conversations, with each conversation item showing the other user\\u0027s name, the last message, and an optional timestamp. The file also includes a `ConversationItem` composable function that renders a single conversation item.\\n\\n`Messages`: A composable function that renders the Messages screen, including a top bar, a bottom bar, and a list of conversations.\\n\\n`ConversationItem`: A composable function that renders a single conversation item, including the other user\\u0027s name, the last message, and an optional timestamp.\&quot;,\&quot;/app/src/main/java/com/example/project_sy43/viewmodel/MessagesViewModel.kt\&quot;:\&quot;This file contains a single class:\\n\\n`MessagesViewModel`: A ViewModel class that fetches and manages the state of conversations and related data from a Firebase Firestore database.\\n\\nThe file also contains the following functions:\\n\\n`fetchConversations()`: Fetches the conversations for the current user from the Firestore database, including the other user\\u0027s name and the first image of the associated product, and updates the state accordingly.\\n\\n`getUserName(userId: String)`: Fetches the username for the given user ID from the Firestore database, caching the result to improve performance.\\n\\nOverall, this file implements a ViewModel class that handles the logic for fetching and managing conversation data from a Firebase Firestore database, providing a clean separation of concerns between the UI and the data layer.\&quot;,\&quot;/app/src/main/java/com/example/project_sy43/viewmodel/PersonViewModel.kt\&quot;:\&quot;This file contains a single class, `PersonViewModel`, which is a ViewModel class responsible for managing the state and data related to a `Person` object in a Firebase Firestore database.\\n\\n`PersonViewModel`: A ViewModel class that manages the state and data related to a `Person` object in a Firebase Firestore database.\\n\\n`fetchPerson()`: Fetches the `Person` object from the Firebase Firestore database for the currently authenticated user.\\n\\n`updatePerson(updatedPerson: Person)`: Updates the `Person` object in the Firebase Firestore database with the provided `updatedPerson` object.\\n\\n`logout()`: Signs out the currently authenticated user and resets the `person` data in the ViewModel.\&quot;,\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/MatieresScreen.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`MatieresScreen`: This function creates a screen that displays a list of materials (e.g., \\\&quot;Acrylic\\\&quot;, \\\&quot;Cotton\\\&quot;, \\\&quot;Leather\\\&quot;) and allows the user to select up to 3 of them. The selected materials are stored in the `SellViewModel` and can be used in other parts of the application.\\n\\nThe file also imports various Compose UI components and classes from the Android Jetpack Compose library, as well as a `VintedTopBar` and `ButtonBottomBar` component from the project\\u0027s own UI theme.\&quot;,\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/SweatCapucheScreen.kt\&quot;:\&quot;This file contains a Composable function `SweatCapucheScreen` that displays a screen for selecting a type of sweatshirt or sweater based on the user\\u0027s selected category (Woman, Man, or Children). The file also defines three objects (`Sweat.womanType`, `Sweat.manType`, and `Sweat.childrenType`) that contain lists of different types of sweaters and sweatshirts.\\n\\n`Sweat`: Defines three lists of different types of sweaters and sweatshirts for women, men, and children.\\n\\n`SweatCapucheScreen`: Displays a screen for selecting a type of sweatshirt or sweater based on the user\\u0027s selected category.\&quot;,\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/ConversationScreen.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`ConversationScreen`: This function creates a Scaffold with a top app bar and a centered text displaying the conversation ID, as a placeholder for the actual conversation implementation.\\n\\nThe file appears to be part of the UI layer of an Android application built using Jetpack Compose, specifically a screen for displaying a conversation.\&quot;,\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/Manteaux.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`ManteauxScreen`: This function creates a screen that displays a list of different types of coats (e.g., Duffle-coats, Parkas, Trenchs) and allows the user to select one by clicking on it. The selected type is then stored in the `SellViewModel`.\\n\\nThe file also imports various Compose UI components and the `SellViewModel` class from the project.\&quot;,\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/ArticleDetail.kt\&quot;:\&quot;This file contains a Composable function `ClothingDetailView` that displays the details of a clothing item, including its images, information, and description. It also includes a `PhotoCarousel` Composable function that displays a carousel of images for the clothing item.\\n\\n`ClothingDetailView`: Displays the details of a clothing item, including its images, information, and description.\\n\\n`PhotoCarousel`: Displays a carousel of images for a clothing item.\\n\\n`deletePost`: Deletes a post from the Firestore database.\&quot;,\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/MaterniteScreen.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`MaterniteScreen`: This function creates a Scaffold with a top bar and a LazyColumn that displays a list of maternité clothing categories, allowing the user to select a category and navigate to the corresponding screen.\\n\\nThe file also imports various Compose UI components and classes from the Android Jetpack Compose library, as well as a `SellViewModel` class and `VintedScreen` enum from the project\\u0027s codebase.\&quot;,\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/Hauts.kt\&quot;:\&quot;This file contains a Composable function `HautScreen` that displays a list of clothing types for the \\\&quot;Hauts\\\&quot; (tops) category in a Vinted-like app. The file also defines three objects (`Hauts.womanType`, `Hauts.manType`, and `Hauts.childrenType`) that contain the lists of clothing types for each gender.\\n\\n`Hauts`: Defines the lists of clothing types for the \\\&quot;Hauts\\\&quot; (tops) category.\\n\\n`HautScreen`: Displays a list of clothing types for the \\\&quot;Hauts\\\&quot; (tops) category, allowing the user to select a type and navigate back to the previous screen.\&quot;,\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/Pantalons.kt\&quot;:\&quot;This file contains a Composable function `PantalonScreen` that displays a list of pants types based on the selected category (Woman, Man, or Children) and allows the user to select a type. The file also defines an object `Pantalons` that contains the titles and lists of pants types for each category.\\n\\n`Pantalons`: An object that contains the titles and lists of pants types for each category (Woman, Man, and Children).\\n\\n`PantalonScreen`: A Composable function that displays a list of pants types based on the selected category and allows the user to select a type.\&quot;,\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/theme/Type.kt\&quot;:\&quot;This file defines the typography styles for a Compose Material 3 application. It sets the default text style for the `bodyLarge` component, and provides commented-out examples for other text styles such as `titleLarge` and `labelSmall`.\\n\\n`Typography`: Defines the set of Material typography styles to be used in the application.\&quot;,\&quot;/app/google-services.json\&quot;:\&quot;This file appears to be a JSON configuration file for a Firebase project. It does not contain any classes or functions, but rather provides information about the project, including the project number, project ID, storage bucket, and client information. The file is used to configure the Firebase SDK for use in an Android application with the package name \\\&quot;com.example.project_sy43\\\&quot;.\&quot;,\&quot;/app/src/main/java/com/example/project_sy43/model/Person.kt\&quot;:\&quot;This file contains a single data class:\\n\\n`Person`: A data class that represents a person with various attributes such as ID, name, age, email, password, phone number, address, date of creation, and date of birth.\\n\\nThis file does not contain any functions. It serves as a model class to represent the structure of a person\\u0027s information within the application.\&quot;,\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/LingerieMaternite.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`LingerieMaterniteScreen`: This function creates a screen that displays a list of lingerie and maternity wear categories, allowing the user to select one and navigate back to the previous screen.\\n\\nThe file also imports various Compose UI components and a `SellViewModel` class, which is likely used to manage the state of the selected product type.\&quot;,\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/Setting.kt\&quot;:\&quot;This file contains a single Composable function `Setting` that represents the settings screen of the application. It includes the following components:\\n\\n`Setting`: This function creates the settings screen, which includes sections for security, notifications, and account management. It also handles the deletion of the user\\u0027s account.\\n\\n`SettingMenuItem`: This function creates a reusable settings menu item with an icon, title, subtitle, and an optional destructive action.\\n\\n`deleteUserAccount`: This function deletes the user\\u0027s account from both the Firebase Authentication and Firestore services.\\n\\nThe file also imports various Compose UI components and Firebase-related classes to implement the settings screen functionality.\&quot;,\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/children_screen/BabyShoes.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`BabyShoesScreen`: This function creates a screen that displays a list of baby shoe types, allowing the user to select a type and navigate back to the previous screen.\\n\\nThe file also imports various Compose UI components and a `SellViewModel` class, which is likely used to manage the state of the selected shoe type.\&quot;,\&quot;/app/src/main/java/com/example/project_sy43/viewmodel/SellViewModel.kt\&quot;:\&quot;This file contains a single class, `SellViewModel`, which is a ViewModel class used in an Android application. The file also contains several functions that are used to manage the state of the ViewModel and interact with a `ProductRepository` to load and save product data.\\n\\n`SellViewModel`: A ViewModel class that manages the state of a product being sold, including its title, description, price, category, type, state, colors, material, size, colis, and availability, as well as a list of product photos.\\n\\n`setSearchResults`: Sets the search results for the ViewModel.\\n`setProductTitle`: Sets the title of the product.\\n`setProductDescription`: Sets the description of the product.\\n`setProductPrice`: Sets the price of the product.\\n`setProductCategory`: Sets the category of the product.\\n`setProductType`: Sets the type of the product.\\n`setProductState`: Sets the state of the product.\\n`setSelectedColors`: Sets the selected colors for the product.\\n`setSelectedMaterial`: Sets the selected materials for the product.\\n`setSelectedSize`: Sets the selected size for the product.\\n`setProductColis`: Sets the colis for the product.\\n`setProductAvailability`: Sets the availability of the product.\\n`setdateCreation`: Sets the creation date of the product.\\n`addProductPhotoUri`: Adds a photo URI to the list of product photos.\\n`setProductPhotoUris`: Sets the list of product photo URIs.\\n`removeProductPhotoUri`: Removes a photo URI from the list of product photos.\\n`loadItem`: Loads a product item from the `ProductRepository` and sets the ViewModel\\u0027s state accordingly.\\n`reset`: Resets the ViewModel\\u0027s state to its initial values.\&quot;,\&quot;/app/src/main/java/com/example/project_sy43/model/Product.kt\&quot;:\&quot;This file defines a data class `Product` that represents a product in an e-commerce application. The class contains various properties that describe the product, such as its title, description, category, price, size, state, color, material, brand, and availability. The class also includes properties for tracking the user who created the product, whether the product is a favorite, and the date of creation. The file does not contain any functions, but rather serves as a model for the product data in the application.\&quot;,\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/VestesScreen.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`VestesScreen`: This function creates a Scaffold with a top bar and a LazyColumn that displays a list of clothing types (e.g., \\\&quot;Perfectos et blousons de moto\\\&quot;, \\\&quot;Blousons aviateur\\\&quot;, etc.) with a radio button for each type. When a user clicks on a type, the `selectedType` variable is updated, and the `SellViewModel` is notified of the selected product type, which then navigates back to the \\\&quot;Sell\\\&quot; screen.\&quot;,\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/components/ButtonBottomBar.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`ButtonBottomBar`: This function creates a bottom app bar with a centered \\\&quot;Terminé\\\&quot; button that, when clicked, calls a provided callback function and navigates back to the previous screen.\\n\\nThe file appears to be a part of a larger Jetpack Compose-based Android application, and it defines a custom bottom app bar component with a button that can be used in the application\\u0027s UI.\&quot;,\&quot;/app/src/main/java/com/example/project_sy43/repository/ProductRepository.kt\&quot;:\&quot;This file contains a single class and one function:\\n\\n`ProductRepository`: A class that provides a repository for managing product data in a Firebase Firestore database.\\n\\n`getItemById`: A function that retrieves a `Product` object from the Firestore database based on the provided `id`.\\n\\nThe file is responsible for interacting with the Firebase Firestore database to fetch product data. It provides a single function, `getItemById`, which retrieves a `Product` object from the database using the provided `id`. If an error occurs during the retrieval process, the function returns `null`.\&quot;,\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/SizeScreen.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`SizeScreen`: This function creates a screen that displays a list of clothing sizes, allows the user to select a size, and updates the selected size in the `SellViewModel`.\\n\\nThe file also imports various Compose UI components and the `SellViewModel` from the project\\u0027s codebase to create the size selection screen.\&quot;,\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/theme/Color.kt\&quot;:\&quot;This file does not contain any classes or functions. Instead, it defines a set of color values that can be used in a Compose-based UI. The colors are defined in two sets: one for a light theme and one for a dark theme. The colors are named using a consistent naming convention, with the first part of the name indicating the color (Purple, PurpleGrey, or Pink) and the second part indicating the shade (80 for a darker shade, 40 for a lighter shade).\&quot;,\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/children_screen/Baby.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`BabyScreen`: This function creates a Scaffold with a top bar and a LazyColumn that displays a list of baby clothing types, allowing the user to select a type and navigate back to the Sell screen.\\n\\nThe file appears to be part of a larger Android application built using Jetpack Compose, a UI toolkit for building native Android applications. The `BabyScreen` function is responsible for rendering the user interface for a screen that allows the user to select a baby clothing type.\&quot;,\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/children_screen/BabyGirl.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`BabyGirlScreen`: This function creates a Scaffold with a top bar and a LazyColumn that displays a list of clothing categories for baby girls, allowing the user to navigate to different screens based on the selected category.\\n\\nThe file also imports various Compose components and classes from the Android Jetpack Compose library, as well as a `SellViewModel` class from the project\\u0027s view model package.\&quot;,\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/RobeOccasion.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`RobeOccasionScreen`: This function creates a screen that displays a list of different types of occasions for robes, allowing the user to select one and navigate back to the previous screen.\\n\\nThe file also imports various Compose UI components and a `SellViewModel` class, which is likely used to manage the state of the selected robe type.\&quot;,\&quot;/app/src/main/java/com/example/project_sy43/viewmodel/ProductViewModel.kt\&quot;:\&quot;This file contains a single class, `ProductViewModel`, which is a ViewModel class in the Android Jetpack Compose framework.\\n\\n`ProductViewModel`: A ViewModel class that manages the state of a list of `Product` objects, allowing for adding, toggling favorites, and removing products.\\n\\n`addProduct(product: Product)`: Adds a new `Product` object to the list of products.\\n\\n`toggleFavorite(index: Int)`: Toggles the `isFavorite` property of the `Product` object at the specified index in the list.\\n\\n`removeProduct(index: Int)`: Removes the `Product` object at the specified index from the list.\&quot;,\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/components/BottomBar.kt\&quot;:\&quot;This file contains a single Composable function `VintedBottomBar` and a helper Composable function `onglet`.\\n\\n`VintedBottomBar`: Renders a bottom navigation bar with five icons (Home, Search, Sell, Inbox, and Profile) that navigate to different screens in the Vinted app.\\n\\n`onglet`: Renders a single navigation icon and label in the bottom navigation bar, with the selected icon and label highlighted based on the current screen.\\n\\nThe file also imports various Android Compose UI components and Firebase authentication functionality to implement the bottom navigation bar.\&quot;,\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/NotificationSetting.kt\&quot;:\&quot;This file contains a single Composable function and a helper function:\\n\\n`NotificationSetting`: A Composable function that displays a screen for managing notification preferences, including push notifications and email notifications, and allows the user to save their preferences to Firestore.\\n\\n`NotificationSettingItem`: A Composable function that renders a single notification setting item with an icon, title, subtitle, and a switch to toggle the setting.\\n\\n`saveNotificationPreferences`: A helper function that saves the user\\u0027s notification preferences to Firestore.\&quot;,\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/ProfileScreen.kt\&quot;:\&quot;This file contains the implementation of the `Profile` screen in a Vinted-like application built using Jetpack Compose.\\n\\n`Profile`: This composable function represents the main profile screen, displaying the user\\u0027s information and providing access to various actions such as viewing the user\\u0027s dressing, accessing settings, and logging out.\\n\\n`ProfileInfoRow`: This composable function creates a row displaying an icon, a label, and a value for a specific user information.\\n\\n`ProfileMenuItem`: This composable function creates a clickable menu item with an icon, a title, and a subtitle, allowing the user to navigate to different parts of the application.\&quot;,\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/SearchScreen.kt\&quot;:\&quot;This file contains the implementation of the Search screen in a Vinted-like application. It includes the following classes and functions:\\n\\n`Search`: A composable function that renders the Search screen, including a search input field, filter options, and a list of search results.\\n\\n`performSearch`: A function that performs a search query on the Firestore database, filters the results based on the user\\u0027s preferences, and updates the SellViewModel with the search results.\\n\\n`PostItemsGrid`: A composable function that displays a grid of post items (products) based on the search results.\\n\\n`PostItem`: A composable function that renders a single post item (product) in the grid, including the product\\u0027s title, photos, price, and description.\\n\\nThe file also includes various utility functions and imports from the Compose and Firebase Firestore libraries to handle the UI, data, and navigation logic of the Search screen.\&quot;,\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/Login.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`LoginScreen`: This function creates a login screen UI for an Android app, allowing users to enter their email and password, and providing functionality for login, password reset, and sign-up.\\n\\nThe file also imports various Compose UI components, Firebase authentication, and a ViewModel class to handle the login logic.\&quot;,\&quot;/app/build.gradle.kts\&quot;:\&quot;This file is a Gradle build script for an Android application. It sets up the project configuration, dependencies, and plugins required for the application. The file does not contain any classes or functions, but rather configures the build process for the Android application.\\n\\nThe key elements in the file are:\\n\\n`plugins`: Specifies the Android application, Kotlin, and Compose plugins to be used in the project.\\n`android`: Configures the Android-specific settings, such as the namespace, compile SDK version, minimum and target SDK versions, and build types.\\n`dependencies`: Specifies the external libraries and frameworks that the application depends on, including Android Core, Lifecycle, Compose, Firebase, and various testing libraries.\\n\\nOverall, this file sets up the build environment and dependencies for an Android application that uses Kotlin and Compose for the user interface, and integrates with Firebase for authentication and Firestore for data storage.\&quot;,\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/SecretFile.kt\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`FlappyBirdGame()`: This function creates a Flappy Bird-style game using Jetpack Compose, where the player controls a bird that must navigate through a series of pipes.\\n\\nThe file implements the game logic, including the bird\\u0027s movement, the generation and movement of the pipes, and the handling of user input (tapping the screen to make the bird jump). The game can be started and restarted by tapping the screen.\&quot;,\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/SellScreen.kt\&quot;:\&quot;This file contains a Composable function `SellScreen` that represents the screen for selling an item in a Vinted-like application. It handles the user interface, user interactions, and the logic for uploading photos, saving the item information to Firestore, and managing the state of the screen.\\n\\n`SellScreen`: Composable function that represents the screen for selling an item, handling user interactions, photo uploads, and saving item information to Firestore.\\n\\n`PhotoThumbnail`: Composable function that displays a thumbnail of a selected photo and provides a button to remove the photo.\\n\\n`InputFields`: Composable function that creates input fields with a label, placeholder, and character limit validation.\\n\\n`generateUniqueUri`: Function that generates a unique URI for taking a photo using the device\\u0027s camera.\\n\\n`uploadPhotosToFirebase`: Function that uploads a list of photos to Firebase Storage and returns the download URLs.\\n\\n`saveArticleToFirestore`: Function that saves the item information, including photos, to Firestore.\&quot;,\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/CombinaisonScreen.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`CombinaisonScreen`: This function creates a screen that displays a list of clothing types (Combinaisons, Combi shorts, and Autres combinaisons et combishorts) with a radio button to select the current type. The selected type is stored in the `SellViewModel` and the user can navigate back to the previous screen after making a selection.\\n\\nThe file also imports various Compose UI components and the `SellViewModel` class from the project.\&quot;,\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/LingeriePyjamasScreen.kt\&quot;:\&quot;This file contains a single Composable function `LingeriePyjamaScreen` that displays a screen for selecting a type of lingerie or pajama. The file also defines three objects `Pyjama`, `womanType`, `manType`, and `childrenType` that contain lists of different types of lingerie and pajamas.\\n\\n`Pyjama`: Defines three lists of different types of lingerie and pajamas for women, men, and children.\\n\\n`LingeriePyjamaScreen`: Displays a screen for selecting a type of lingerie or pajama, with a top bar and a lazy column of selectable types.\&quot;,\&quot;/app/src/androidTest/java/com/example/project_sy43/ExampleInstrumentedTest.kt\&quot;:\&quot;This file contains an instrumented test for an Android app. It does not define any classes or functions, but rather tests the context of the app under test.\\n\\n`ExampleInstrumentedTest`: This is an instrumented test class that runs on an Android device and tests the context of the app under test.\\n\\n`useAppContext()`: This function tests that the package name of the app under test is \\\&quot;com.example.project_sy43\\\&quot;.\&quot;,\&quot;/build.gradle.kts\&quot;:\&quot;This file is a top-level build file that sets up common configuration options for all sub-projects or modules in the Android application. It does not contain any classes or functions, but rather sets up the necessary plugins and dependencies for the project.\\n\\nThe plugins used in this file are:\\n\\n`alias(libs.plugins.android.application)`: Applies the Android application plugin to the project.\\n`alias(libs.plugins.kotlin.android)`: Applies the Kotlin Android plugin to the project.\\n`alias(libs.plugins.kotlin.compose)`: Applies the Kotlin Compose plugin to the project.\\n`id(\\\&quot;com.google.gms.google-services\\\&quot;)`: Adds the Google Services Gradle plugin to the project, which is used for integrating Google services.\\n\\nOverall, this file sets up the basic configuration for the Android application, including the necessary plugins and dependencies, to ensure a consistent setup across all sub-projects or modules.\&quot;,\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/UpdateProfile.kt\&quot;:\&quot;This file contains a Composable function `UpdateProfile` that allows the user to update their profile information, including their first name, last name, email, date of birth, address, and phone number. It also includes several helper functions and Composable components used within the `UpdateProfile` function.\\n\\n`UpdateProfile`: Provides a UI for updating the user\\u0027s profile information and saves the changes to Firestore.\\n\\n`EditableField`: Composable component that renders an `OutlinedTextField` with a leading icon and optional error message.\\n\\n`convertMillisToDateOfBirth`: Converts a timestamp in milliseconds to a date of birth string in the format \\\&quot;dd/mm/yyyy\\\&quot;.\\n\\n`calculateAgeWithDateOfBirth`: Calculates the user\\u0027s age based on their date of birth.\&quot;,\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/Robe.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`RobeScreen`: This function creates a Scaffold with a top bar and a LazyColumn that displays a list of robe types, allowing the user to select a type and navigate to the corresponding screen.\\n\\nThe file also imports various Compose components and classes from the Android Jetpack Compose library, as well as a `VintedTopBar` component and a `SellViewModel` class from the project\\u0027s own codebase.\&quot;,\&quot;/app/src/test/java/com/example/project_sy43/ExampleUnitTest.kt\&quot;:\&quot;This file contains a single unit test class for an Android project.\\n\\n`ExampleUnitTest`: This class contains a single unit test that checks if the addition of 2 and 2 is correct.\\n\\n`addition_isCorrect()`: This function performs a simple addition test to ensure that 2 + 2 equals 4.\&quot;,\&quot;/app/src/main/java/com/example/project_sy43/MainActivity.kt\&quot;:\&quot;This file is the main entry point for the Android application, and it sets up the navigation graph, view models, and theme for the application.\\n\\n`MainActivity`: The main activity class that sets up the application\\u0027s UI and initializes the necessary view models.\\n\\n`onCreate`: The function that is called when the activity is created, which sets the default night mode and initializes the application\\u0027s UI and view models.\&quot;,\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/SportScreen.kt\&quot;:\&quot;This file contains a Composable function `SportScreen` that displays a screen for selecting sports clothing types based on the user\\u0027s selected category (Woman, Man, or Children). The file also defines three objects (`Sport.womanType`, `Sport.manType`, and `Sport.childrenType`) that contain lists of sports clothing types for each category.\\n\\n`Sport`: Defines lists of sports clothing types for different categories (Woman, Man, and Children).\\n\\n`SportScreen`: Displays a screen for selecting sports clothing types based on the user\\u0027s selected category.\&quot;,\&quot;/app/src/main/java/com/example/project_sy43/navigation/VintedScreen.kt\&quot;:\&quot;This file defines an `enum` class called `VintedScreen` that represents different screens or views within a mobile application. Each `VintedScreen` value corresponds to a specific screen or functionality within the application, such as the home screen, login screen, profile screen, and various product categories. The purpose of this file is to provide a centralized and consistent way to manage and reference the different screens and views in the application.\&quot;}&quot;}" />
    <option name="fileSkeletonMaps" value="{&quot;C:/Users/fthun/AndroidStudioProjects/Project_SY43&quot;:&quot;{\&quot;/app/src/androidTest/java/com/example/project_sy43/ExampleInstrumentedTest.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/androidTest/java/com/example/project_sy43/ExampleInstrumentedTest.kt\&quot;,\&quot;file_name\&quot;:\&quot;ExampleInstrumentedTest.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/project_sy43/model/Conversation.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/project_sy43/model/Conversation.kt\&quot;,\&quot;file_name\&quot;:\&quot;Conversation.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/project_sy43/model/Message.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/project_sy43/model/Message.kt\&quot;,\&quot;file_name\&quot;:\&quot;Message.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/project_sy43/model/Person.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/project_sy43/model/Person.kt\&quot;,\&quot;file_name\&quot;:\&quot;Person.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/project_sy43/model/Product.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/project_sy43/model/Product.kt\&quot;,\&quot;file_name\&quot;:\&quot;Product.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/project_sy43/navigation/VintedNavGraph.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/project_sy43/navigation/VintedNavGraph.kt\&quot;,\&quot;file_name\&quot;:\&quot;VintedNavGraph.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/project_sy43/navigation/VintedScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/project_sy43/navigation/VintedScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;VintedScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/project_sy43/repository/ProductRepository.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/project_sy43/repository/ProductRepository.kt\&quot;,\&quot;file_name\&quot;:\&quot;ProductRepository.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/children_screen/Baby.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/children_screen/Baby.kt\&quot;,\&quot;file_name\&quot;:\&quot;Baby.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/children_screen/BabyGirl.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/children_screen/BabyGirl.kt\&quot;,\&quot;file_name\&quot;:\&quot;BabyGirl.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/children_screen/BabyShoes.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/children_screen/BabyShoes.kt\&quot;,\&quot;file_name\&quot;:\&quot;BabyShoes.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/components/BottomBar.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/components/BottomBar.kt\&quot;,\&quot;file_name\&quot;:\&quot;BottomBar.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/components/ButtonBottomBar.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/components/ButtonBottomBar.kt\&quot;,\&quot;file_name\&quot;:\&quot;ButtonBottomBar.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/components/TopBar.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/components/TopBar.kt\&quot;,\&quot;file_name\&quot;:\&quot;TopBar.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/AccueilScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/AccueilScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;AccueilScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/ArticleDetail.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/ArticleDetail.kt\&quot;,\&quot;file_name\&quot;:\&quot;ArticleDetail.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/ConversationScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/ConversationScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;ConversationScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/Dressing.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/Dressing.kt\&quot;,\&quot;file_name\&quot;:\&quot;Dressing.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/HomeScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/HomeScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;HomeScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/Login.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/Login.kt\&quot;,\&quot;file_name\&quot;:\&quot;Login.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/MessagesScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/MessagesScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;MessagesScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/NotificationSetting.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/NotificationSetting.kt\&quot;,\&quot;file_name\&quot;:\&quot;NotificationSetting.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/ProfileScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/ProfileScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;ProfileScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/SearchScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/SearchScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;SearchScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/SecretFile.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/SecretFile.kt\&quot;,\&quot;file_name\&quot;:\&quot;SecretFile.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/SellScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/SellScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;SellScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/Setting.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/Setting.kt\&quot;,\&quot;file_name\&quot;:\&quot;Setting.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/SignUpScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/SignUpScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;SignUpScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/TypeClotheScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/TypeClotheScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;TypeClotheScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/UpdatePassword.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/UpdatePassword.kt\&quot;,\&quot;file_name\&quot;:\&quot;UpdatePassword.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/UpdateProfile.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/main_screens/UpdateProfile.kt\&quot;,\&quot;file_name\&quot;:\&quot;UpdateProfile.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/AccessoireSportScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/AccessoireSportScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;AccessoireSportScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/BlazerScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/BlazerScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;BlazerScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/ColorScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/ColorScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;ColorScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/CombinaisonScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/CombinaisonScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;CombinaisonScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/Hauts.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/Hauts.kt\&quot;,\&quot;file_name\&quot;:\&quot;Hauts.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/Jupes.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/Jupes.kt\&quot;,\&quot;file_name\&quot;:\&quot;Jupes.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/LingerieMaternite.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/LingerieMaternite.kt\&quot;,\&quot;file_name\&quot;:\&quot;LingerieMaternite.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/LingeriePyjamasScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/LingeriePyjamasScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;LingeriePyjamasScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/MaillotDeBainScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/MaillotDeBainScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;MaillotDeBainScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/Manteaux.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/Manteaux.kt\&quot;,\&quot;file_name\&quot;:\&quot;Manteaux.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/ManteauxEtVestesScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/ManteauxEtVestesScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;ManteauxEtVestesScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/MaterniteScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/MaterniteScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;MaterniteScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/MatieresScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/MatieresScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;MatieresScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/Pantalons.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/Pantalons.kt\&quot;,\&quot;file_name\&quot;:\&quot;Pantalons.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/Robe.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/Robe.kt\&quot;,\&quot;file_name\&quot;:\&quot;Robe.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/RobeOccasion.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/RobeOccasion.kt\&quot;,\&quot;file_name\&quot;:\&quot;RobeOccasion.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/ShortScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/ShortScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;ShortScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/SizeScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/SizeScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;SizeScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/SportScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/SportScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;SportScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/SweatCapucheScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/SweatCapucheScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;SweatCapucheScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/SweatScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/SweatScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;SweatScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/VestesScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/second_screens/VestesScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;VestesScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/theme/Color.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/theme/Color.kt\&quot;,\&quot;file_name\&quot;:\&quot;Color.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/theme/Theme.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/theme/Theme.kt\&quot;,\&quot;file_name\&quot;:\&quot;Theme.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/theme/Type.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/project_sy43/ui/theme/theme/Type.kt\&quot;,\&quot;file_name\&quot;:\&quot;Type.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/project_sy43/viewmodel/MessagesViewModel.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/project_sy43/viewmodel/MessagesViewModel.kt\&quot;,\&quot;file_name\&quot;:\&quot;MessagesViewModel.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/project_sy43/viewmodel/PersonViewModel.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/project_sy43/viewmodel/PersonViewModel.kt\&quot;,\&quot;file_name\&quot;:\&quot;PersonViewModel.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/project_sy43/viewmodel/ProductViewModel.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/project_sy43/viewmodel/ProductViewModel.kt\&quot;,\&quot;file_name\&quot;:\&quot;ProductViewModel.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/project_sy43/viewmodel/SellViewModel.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/project_sy43/viewmodel/SellViewModel.kt\&quot;,\&quot;file_name\&quot;:\&quot;SellViewModel.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/project_sy43/MainActivity.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/project_sy43/MainActivity.kt\&quot;,\&quot;file_name\&quot;:\&quot;MainActivity.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/test/java/com/example/project_sy43/ExampleUnitTest.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/test/java/com/example/project_sy43/ExampleUnitTest.kt\&quot;,\&quot;file_name\&quot;:\&quot;ExampleUnitTest.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/build.gradle.kts\&quot;:{\&quot;file_path\&quot;:\&quot;/app/build.gradle.kts\&quot;,\&quot;file_name\&quot;:\&quot;build.gradle.kts\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/google-services.json\&quot;:{\&quot;file_path\&quot;:\&quot;/app/google-services.json\&quot;,\&quot;file_name\&quot;:\&quot;google-services.json\&quot;,\&quot;methods\&quot;:[]},\&quot;/build.gradle.kts\&quot;:{\&quot;file_path\&quot;:\&quot;/build.gradle.kts\&quot;,\&quot;file_name\&quot;:\&quot;build.gradle.kts\&quot;,\&quot;methods\&quot;:[]},\&quot;/settings.gradle.kts\&quot;:{\&quot;file_path\&quot;:\&quot;/settings.gradle.kts\&quot;,\&quot;file_name\&quot;:\&quot;settings.gradle.kts\&quot;,\&quot;methods\&quot;:[]}}&quot;}" />
  </component>
</project>